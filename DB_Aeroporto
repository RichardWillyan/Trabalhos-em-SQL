/*
Atividade sobre o comando select
Modelagem de dados 2°Turno Professora Erika
Alunos:
Richard Willyan Soares de Oliveira   
Filipe Antonio de Oliveira Bega      
*/
-- Database: DB_Passagem

-- DROP DATABASE IF EXISTS "DB_Passagem";
/*
CREATE DATABASE "DB_Passagem"
    WITH 
    OWNER = postgres
    ENCODING = 'UTF8'
    LC_COLLATE = 'Portuguese_Brazil.1252'
    LC_CTYPE = 'Portuguese_Brazil.1252'
    TABLESPACE = pg_default
    CONNECTION LIMIT = -1;
*/

--Criando a tabela cliente.

create table cliente
(
	cod_cli 		INT,
	nome 			VARCHAR(40),
	cpf 			VARCHAR(11) unique,
	rua 			VARCHAR(30),
	num 			VARCHAR(10),
	bairro 			VARCHAR(30),
	cidade 			VARCHAR(35),
	uf 				VARCHAR(2),
	cep 			VARCHAR(8),
	Constraint pk_cliente primary key (cod_cli)
);

--Criando a tabela passagem.

create table passagem
(
	num 			INT,
	valor 			NUMERIC(5,2) NOT NULL,
	poltrona 		INT NOT NULL,
	data_compra 	DATE,
	tipo_cartao 	INT,
	num_cartao 		VARCHAR(30) NOT NULL,
	cod_cli 		INT,
	Constraint pk_passagem primary key (num),
	Constraint fk_passagem_cli foreign key (cod_cli) references cliente(cod_cli)
);

--Criando a tabela rota.

create table rota
(
	num_voo 		INT,
	rota 			VARCHAR(30) NOT NULL,
	num_passagem 	INT,
	Constraint pk_rota primary key (num_voo),
	Constraint fk_rota_pass foreign key (num_passagem) references passagem(num)
);
	
--Inserindo registros na tabela cliente.

INSERT INTO cliente VALUES 
(1,'Eduardo José','87623434299','Rua A','100','Centro','Mogi das Cruzes','SP','09887987'),
(2,'Jonas','87623434212','Rua B','100','Tatuapé','São Paulo','SP','23876987'),
(3,'Maria','20923434299','Rua Cecilia','100','Centro','Rio de Janeiro','RJ','09887987'),
(4,'Gabriel','98723434299','Rua Azul','100','Centro','Belo Horizonte','MG','09887987'),
(5,'Rafaela','87623826299','Rua A','100','Centro','Mogi das Cruzes','SP','09887987'),	
(6,'Eduardo Rodriguês','49875215874','Rua Cecilia','100','Centro','Rio de Janeiro','RJ','09887987'),
(7,'Geovana','35498713567','Rua A','100','Tatuapé','São Paulo','SP','08754195'),
(8,'Guilherme','93652148751','Rua Azul','100','Centro','Belo Horizonte','MG','07849613'),
(9,'Antônio','25649875124','Rua Cecilia','100','Centro','Rio de Janeiro','RJ','03659874'),
(10,'Eduardo Oliveira','35487912485','Rua B','100','Tatuapé','São Paulo','SP','07854321');

--Inserindo registros na tabela passagem.

INSERT INTO passagem VALUES
(1,150.00,10,'01-04-2011',1,'123456789',2),
(2,500.00,45,'23-03-2011',3,'123456789',2),
(3,200.00,30,'15-04-2011',2,'123456789',3),
(4,250.00,01,'27-03-2011',2,'123456789',1),
(5,140.00,23,'08-02-2011',1,'123456789',5),
(6,120.00,15,'07-06-2011',1,'123456789',4),
(7,260.00,38,'25-01-2011',3,'123456789',10),
(8,550.00,02,'15-11-2011',2,'123456789',8),
(9,190.00,98,'06-10-2011',1,'123456789',6),
(10,450.00,29,'18-07-2011',3,'123456789',7);
	
--Inserindo registros na tabela rota.	
	
INSERT INTO rota VALUES 
(1,'São Paulo-Rio de Janeiro',1),
(2,'Rio de Janeiro-Belo Horizonte',2),
(3,'Belo Horizonte-São Paulo',3),
(4,'Natal-São Paulo',4),
(5,'Belo Horizonte-Natal',5),
(6,'Rio de Janeiro-Natal',6),
(7,'São Paulo-Belo Horizonte',7),
(8,'Natal-Rio de Jnaeiro',8),
(9,'Rio de Janeiro-São Paulo',9),
(10,'Belo Horizonte-Rio de Janeiro',10);

--1. Selecione todos os códigos dos clientes que contém o nome EDUARDO.

select cod_cli,nome
from cliente
where nome ilike '%Eduardo%';

--2. Selecione todos os clientes com o código maior ou igual a 2.

select *
from cliente
where cod_cli >= 2;

--3. Selecione o número do voo de todas as rotas que contenham São Paulo.

select num_voo, rota
from rota
where rota ilike '%São Paulo%';

--4. Selecione todos os clientes que moram no estado de SP ou na ‘Rua Cecilia’.

select *
from cliente
where uf = 'SP' or rua = 'Rua Cecilia';

--5. Selecione o código e o nome dos clientes em ordem crescente pelo nome.

select cod_cli, nome
from cliente
order by nome asc;

--6. Selecione o código e o nome dos clientes em ordem decrescente pelo código.

select cod_cli, nome
from cliente
order by cod_cli desc;

--7. Selecione todos os clientes que não moram no estado de SP em ordem crescente pelo
--estado e ordem decrescente pelo nome.

select uf,nome
from cliente
where uf <> 'SP'
order by uf asc, nome desc; 

--8. Selecione os nomes dos clientes com código entre 2 e 5.

select nome,cod_cli
from cliente
where cod_cli between 2 and 5;

--9. Selecione os nomes de clientes que contenham a letra E.

select nome
from cliente
where nome ilike '%E%';

--10. Selecione os nomes de clientes que não comecem com a letra G.

select nome
from cliente
where nome not ilike 'G%';

--11. Selecione os nomes de estados que comecem com M e tenham 
--qualquer outro caractere depois.

select uf
from cliente
where uf ilike 'M%';

--12. Selecione o nome do cliente e seu respectivo número da passagem e 
--poltrona ordenando pelo nome e número da passagem em ordem crescente.

select cliente.nome, passagem.num, passagem.poltrona
from passagem
inner join cliente 
ON cliente.cod_cli = passagem.cod_cli;

--13. Selecione o nome do cliente e seu respectivo número da passagem, 
--poltrona e número do voo.

select cl.nome, pa.num, pa.poltrona, ro.num_voo
from rota ro
inner join passagem pa
on pa.num=ro.num_passagem
inner join cliente cl
ON cl.cod_cli = pa.cod_cli;

--14. Selecione o número da passagem, poltrona, rota e número do voo do cliente ‘JONAS’.

select cl.nome, pa.num, pa.poltrona, ro.rota, ro.num_voo
from rota ro
inner join passagem pa
on pa.num=ro.num_passagem
inner join cliente cl
ON cl.cod_cli = pa.cod_cli
where cl.nome = 'Jonas';

--15. Selecione o número da passagem, poltrona, rota e número do voo do cliente ‘JONAS’ 
--cujo valor seja maior que R$ 150,00.

select cl.nome, pa.num, pa.poltrona, pa.valor, ro.rota, ro.num_voo
from rota ro
inner join passagem pa
on pa.num=ro.num_passagem
inner join cliente cl
ON cl.cod_cli = pa.cod_cli
where cl.nome = 'Jonas' and pa.valor > 150;


